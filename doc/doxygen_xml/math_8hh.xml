<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="math_8hh" kind="file" language="C++">
    <compoundname>math.hh</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">vector</includes>
    <includedby refid="multipole__expansion_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.hh</includedby>
    <includedby refid="electric__fields_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.cc</includedby>
    <includedby refid="math_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/math.cc</includedby>
    <includedby refid="export__math_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc</includedby>
    <includedby refid="export__multipole_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_multipole.cc</includedby>
    <includedby refid="pot__manipulation_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/utils/pot_manipulation.cc</includedby>
    <includedby refid="potfile__reader_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/utils/potfile_reader.cc</includedby>
    <incdepgraph>
      <node id="71">
        <label>Eigen/Core</label>
      </node>
      <node id="70">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/math.hh</label>
        <link refid="math_8hh"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="74">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.hh</label>
        <link refid="multipole__expansion_8hh"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.cc</label>
        <link refid="multipole__expansion_8cc"/>
      </node>
      <node id="81">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/potfile_reader.cc</label>
        <link refid="potfile__reader_8cc"/>
      </node>
      <node id="76">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.cc</label>
        <link refid="cppe__state_8cc"/>
      </node>
      <node id="82">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/math.cc</label>
        <link refid="math_8cc"/>
      </node>
      <node id="73">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/math.hh</label>
        <link refid="math_8hh"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>/Users/maxscheurer/Projects/cppe/cppe/libcppe.cc</label>
        <link refid="libcppe_8cc"/>
      </node>
      <node id="85">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/pot_manipulation.cc</label>
        <link refid="pot__manipulation_8cc"/>
      </node>
      <node id="79">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_fields.cc</label>
        <link refid="export__fields_8cc"/>
      </node>
      <node id="77">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.cc</label>
        <link refid="electric__fields_8cc"/>
      </node>
      <node id="75">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh</label>
        <link refid="electric__fields_8hh"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_multipole.cc</label>
        <link refid="export__multipole_8cc"/>
      </node>
      <node id="83">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc</label>
        <link refid="export__math_8cc"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelibcppe">libcppe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibcppe" kindref="compound">libcppe</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">Eigen::Vector3d<sp/><ref refid="namespacelibcppe_1ab3345600c4bcba48203bc9ebf0bfa26b" kindref="member">smat_vec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;mat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>&amp;vec,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">Eigen::VectorXd<sp/><ref refid="namespacelibcppe_1ad8720df1e0ef45bf4bf85f41cefe06e4" kindref="member">multipole_derivative</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>&amp;Rji,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>Mkj,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::MatrixXi&gt;<sp/>&amp;Tk_coeffs);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1adffd860092c2f5b3cfd872ed27d727dc" kindref="member">T</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>&amp;Rij,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::MatrixXi&gt;<sp/>&amp;Cijn);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">Eigen::VectorXd<sp/><ref refid="namespacelibcppe_1a3a5eca65d4ae00dea484f437797349a6" kindref="member">Tk_tensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/>&amp;Rij,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Eigen::MatrixXi&gt;<sp/>&amp;Tk_coeffs);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">std::vector&lt;Eigen::MatrixXi&gt;<sp/><ref refid="namespacelibcppe_1a97556873162363c2affbca8253042729" kindref="member">Tk_coefficients</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_order);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1ae154b65087da1892fd7ab0f1da8152b0" kindref="member">xyz2idx</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>return<sp/>type<sp/>should<sp/>be<sp/>unsigned<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1aa592960766a82f25a26aedd55ca25d4e" kindref="member">factorial</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1a7501ee95ce7c58b05d8d856397bfed40" kindref="member">make_df</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k,<sp/>std::vector&lt;double&gt;<sp/>&amp;df);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1ad06531d448492562498d98ef6b1be53e" kindref="member">trinom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="namespacelibcppe_1a0427d5cd7fdd232f829e3dc48524d8d0" kindref="member">symmetry_factors</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="namespacelibcppe_1adcabc059a00716d45ddca295dc0b93d5" kindref="member">prefactors</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="namespacelibcppe_1ae68605edfeae6c5741f5ec4c17bc0e0f" kindref="member">prefactors_nuclei</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelibcppe_1a805981c691429e1882cc7e4613128374" kindref="member">multipole_components</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>libcppe</highlight></codeline>
    </programlisting>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/core/math.hh"/>
  </compounddef>
</doxygen>
