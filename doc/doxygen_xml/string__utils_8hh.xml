<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="string__utils_8hh" kind="file" language="C++">
    <compoundname>string_utils.hh</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="pe__energies_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/pe_energies.hh</includedby>
    <includedby refid="potfile__reader_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/utils/potfile_reader.cc</includedby>
    <includedby refid="string__utils_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc</includedby>
    <incdepgraph>
      <node id="353">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh</label>
        <link refid="string__utils_8hh"/>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
      </node>
      <node id="355">
        <label>string</label>
      </node>
      <node id="356">
        <label>vector</label>
      </node>
      <node id="354">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="357">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh</label>
        <link refid="string__utils_8hh"/>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc</label>
        <link refid="string__utils_8cc"/>
      </node>
      <node id="363">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/potfile_reader.cc</label>
        <link refid="potfile__reader_8cc"/>
      </node>
      <node id="362">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/pe_energies.cc</label>
        <link refid="pe__energies_8cc"/>
      </node>
      <node id="360">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.cc</label>
        <link refid="cppe__state_8cc"/>
      </node>
      <node id="358">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/pe_energies.hh</label>
        <link refid="pe__energies_8hh"/>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="359">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.hh</label>
        <link refid="cppe__state_8hh"/>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="361">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_state.cc</label>
        <link refid="export__state_8cc"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="string__utils_8hh_1a03529396588a5d4dac36c432989fdfaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void split</definition>
        <argsstring>(const std::string &amp;s, char delim, Out result)</argsstring>
        <name>split</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh" line="9" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc" bodystart="4" bodyend="11"/>
        <referencedby refid="structlibcppe_1_1_pe_energy_1add508370dc5e95e2709517019d138ab8" compoundref="pe__energies_8cc" startline="19" endline="41">libcppe::PeEnergy::get</referencedby>
        <referencedby refid="structlibcppe_1_1_pe_energy_1aa809505d827c8c656e5e90ca87630fe7" compoundref="pe__energies_8cc" startline="43" endline="54">libcppe::PeEnergy::set</referencedby>
        <referencedby refid="classlibcppe_1_1_potfile_reader_1a4f9a3c16cc038583a5b5312ad120294f" compoundref="potfile__reader_8cc" startline="33" endline="203">libcppe::PotfileReader::read</referencedby>
        <referencedby refid="string__utils_8hh_1ae924c9b43cd7b086945003c09c294d2b" compoundref="string__utils_8cc" startline="13" endline="17">split</referencedby>
      </memberdef>
      <memberdef kind="function" id="string__utils_8hh_1ae924c9b43cd7b086945003c09c294d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; split</definition>
        <argsstring>(const std::string &amp;s, char delim)</argsstring>
        <name>split</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh" line="11" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc" bodystart="13" bodyend="17"/>
        <references refid="string__utils_8cc_1a03529396588a5d4dac36c432989fdfaa" compoundref="string__utils_8cc" startline="4" endline="11">split</references>
      </memberdef>
      <memberdef kind="function" id="string__utils_8hh_1af0673e28e62387813b2a2ee5b3f98948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string trim</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;whitespace=&quot; \)</argsstring>
        <name>trim</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh" line="13" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc" bodystart="19" bodyend="27"/>
        <referencedby refid="string__utils_8hh_1ab5456014419648811b8c9ba2000cf82f" compoundref="string__utils_8cc" startline="29" endline="47">reduce</referencedby>
      </memberdef>
      <memberdef kind="function" id="string__utils_8hh_1ab5456014419648811b8c9ba2000cf82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string reduce</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;fill=&quot; &quot;, const std::string &amp;whitespace=&quot; \&quot;)</argsstring>
        <name>reduce</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fill</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh" line="15" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.cc" bodystart="29" bodyend="47"/>
        <references refid="string__utils_8cc_1a61bb9a4530ff40c81495172a56719e36" compoundref="string__utils_8cc" startline="19" endline="27">trim</references>
        <referencedby refid="classlibcppe_1_1_potfile_reader_1a4f9a3c16cc038583a5b5312ad120294f" compoundref="potfile__reader_8cc" startline="33" endline="203">libcppe::PotfileReader::read</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBCPPE_UTILS_STRING_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBCPPE_UTILS_STRING_UTIL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Out&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="string__utils_8hh_1a03529396588a5d4dac36c432989fdfaa" kindref="member">split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim,<sp/>Out<sp/>result);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="string__utils_8hh_1a03529396588a5d4dac36c432989fdfaa" kindref="member">split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">std::string<sp/><ref refid="string__utils_8hh_1af0673e28e62387813b2a2ee5b3f98948" kindref="member">trim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>whitespace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">std::string<sp/><ref refid="string__utils_8hh_1ab5456014419648811b8c9ba2000cf82f" kindref="member">reduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fill<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>whitespace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LIBCPPE_UTILS_STRING_UTIL_H</highlight></codeline>
    </programlisting>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/utils/string_utils.hh"/>
  </compounddef>
</doxygen>
