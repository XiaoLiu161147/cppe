<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="molecule_8hh" kind="file" language="C++">
    <compoundname>molecule.hh</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="cppe__state_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.hh</includedby>
    <includedby refid="electric__fields_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh</includedby>
    <includedby refid="multipole__expansion_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.hh</includedby>
    <includedby refid="cppe__state_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.cc</includedby>
    <includedby refid="pot__manipulation_8hh" local="yes">/Users/maxscheurer/Projects/cppe/cppe/utils/pot_manipulation.hh</includedby>
    <includedby refid="export__fields_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_fields.cc</includedby>
    <includedby refid="export__molecule_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_molecule.cc</includedby>
    <includedby refid="export__utils_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_utils.cc</includedby>
    <incdepgraph>
      <node id="86">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/molecule.hh</label>
        <link refid="molecule_8hh"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>Eigen/Core</label>
      </node>
      <node id="87">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="97">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.hh</label>
        <link refid="multipole__expansion_8hh"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/multipole_expansion.cc</label>
        <link refid="multipole__expansion_8cc"/>
      </node>
      <node id="89">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/molecule.hh</label>
        <link refid="molecule_8hh"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/potfile_reader.cc</label>
        <link refid="potfile__reader_8cc"/>
      </node>
      <node id="91">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.cc</label>
        <link refid="cppe__state_8cc"/>
      </node>
      <node id="90">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/cppe_state.hh</label>
        <link refid="cppe__state_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>/Users/maxscheurer/Projects/cppe/cppe/libcppe.cc</label>
        <link refid="libcppe_8cc"/>
      </node>
      <node id="100">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/pot_manipulation.hh</label>
        <link refid="pot__manipulation_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_state.cc</label>
        <link refid="export__state_8cc"/>
      </node>
      <node id="102">
        <label>/Users/maxscheurer/Projects/cppe/cppe/utils/pot_manipulation.cc</label>
        <link refid="pot__manipulation_8cc"/>
      </node>
      <node id="103">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_molecule.cc</label>
        <link refid="export__molecule_8cc"/>
      </node>
      <node id="96">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_fields.cc</label>
        <link refid="export__fields_8cc"/>
      </node>
      <node id="94">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.cc</label>
        <link refid="electric__fields_8cc"/>
      </node>
      <node id="93">
        <label>/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh</label>
        <link refid="electric__fields_8hh"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_utils.cc</label>
        <link refid="export__utils_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlibcppe_1_1_atom" prot="public">libcppe::Atom</innerclass>
    <innerclass refid="structlibcppe_1_1_molecule" prot="public">libcppe::Molecule</innerclass>
    <innernamespace refid="namespacelibcppe">libcppe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBCPPE_CPPE_CORE_MOLECULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBCPPE_CPPE_CORE_MOLECULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibcppe" kindref="compound">libcppe</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="structlibcppe_1_1_atom" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibcppe_1_1_atom" kindref="compound">Atom</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="structlibcppe_1_1_atom_1a7d69b84e07a95afdaf031d0c8bfd6194" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibcppe_1_1_atom_1a7d69b84e07a95afdaf031d0c8bfd6194" kindref="member">atomic_number</ref>;</highlight></codeline>
<codeline lineno="12" refid="structlibcppe_1_1_atom_1addcaec69596bfc6e69dae360a29fc9c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlibcppe_1_1_atom_1addcaec69596bfc6e69dae360a29fc9c9" kindref="member">charge</ref>;</highlight></codeline>
<codeline lineno="13" refid="structlibcppe_1_1_atom_1a9871d78702db2db2c2c3bba819f13bee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structlibcppe_1_1_atom_1a4f455271506d6abd6d7aad6802bab100" kindref="member">m_x</ref>,<sp/><ref refid="structlibcppe_1_1_atom_1ab83c5d9e9a576fca8f9be4f007935678" kindref="member">m_y</ref>,<sp/><ref refid="structlibcppe_1_1_atom_1a9871d78702db2db2c2c3bba819f13bee" kindref="member">m_z</ref>;</highlight></codeline>
<codeline lineno="14" refid="structlibcppe_1_1_atom_1aac22269becbd607ad9fc1f80bc34e1ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlibcppe_1_1_atom_1aac22269becbd607ad9fc1f80bc34e1ac" kindref="member">Atom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>an)<sp/>:<sp/><ref refid="structlibcppe_1_1_atom_1a7d69b84e07a95afdaf031d0c8bfd6194" kindref="member">atomic_number</ref>(an)<sp/>{<sp/><ref refid="structlibcppe_1_1_atom_1addcaec69596bfc6e69dae360a29fc9c9" kindref="member">charge</ref><sp/>=<sp/>an;<sp/>}</highlight></codeline>
<codeline lineno="15" refid="structlibcppe_1_1_atom_1a6c19e6fb839e57b798f1dd68cea2a2b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlibcppe_1_1_atom_1a6c19e6fb839e57b798f1dd68cea2a2b8" kindref="member">Atom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>an,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structlibcppe_1_1_atom_1a7d69b84e07a95afdaf031d0c8bfd6194" kindref="member">atomic_number</ref>(an),<sp/><ref refid="structlibcppe_1_1_atom_1a4f455271506d6abd6d7aad6802bab100" kindref="member">m_x</ref>(x),<sp/><ref refid="structlibcppe_1_1_atom_1ab83c5d9e9a576fca8f9be4f007935678" kindref="member">m_y</ref>(y),<sp/><ref refid="structlibcppe_1_1_atom_1a9871d78702db2db2c2c3bba819f13bee" kindref="member">m_z</ref>(z)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlibcppe_1_1_atom_1addcaec69596bfc6e69dae360a29fc9c9" kindref="member">charge</ref><sp/>=<sp/>an;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structlibcppe_1_1_atom_1aa897a7ae285f6e5a766e5918d4f5fe4f" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/><ref refid="structlibcppe_1_1_atom_1aa897a7ae285f6e5a766e5918d4f5fe4f" kindref="member">get_pos</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Vector3d(<ref refid="structlibcppe_1_1_atom_1a4f455271506d6abd6d7aad6802bab100" kindref="member">m_x</ref>,<sp/><ref refid="structlibcppe_1_1_atom_1ab83c5d9e9a576fca8f9be4f007935678" kindref="member">m_y</ref>,<sp/><ref refid="structlibcppe_1_1_atom_1a9871d78702db2db2c2c3bba819f13bee" kindref="member">m_z</ref>);<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Molecule<sp/>is<sp/>a<sp/>slightly<sp/>decorated<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structlibcppe_1_1_molecule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibcppe_1_1_molecule" kindref="compound">Molecule</ref><sp/>:<sp/>std::vector&lt;Atom&gt;<sp/>{</highlight></codeline>
<codeline lineno="25" refid="structlibcppe_1_1_molecule_1a4e1f11e4f1bcda522d619cc2a9465630" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/><ref refid="structlibcppe_1_1_molecule_1a4e1f11e4f1bcda522d619cc2a9465630" kindref="member">get_atom_position</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atom)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size()<sp/>&lt;=<sp/>atom)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>atoms<sp/>in<sp/>Molecule.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[atom].get_pos();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="structlibcppe_1_1_molecule_1a416d187640ae6fcf2315e8585f219972" kindref="member">~Molecule</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="structlibcppe_1_1_molecule" kindref="compound">Molecule</ref><sp/>&amp;<ref refid="structlibcppe_1_1_molecule_1ab63a494b1e4e2d56c90d8f48c29fed69" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibcppe_1_1_molecule" kindref="compound">Molecule</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>libcppe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LIBCPPE_CPPE_CORE_MOLECULE_H</highlight></codeline>
    </programlisting>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/core/molecule.hh"/>
  </compounddef>
</doxygen>
