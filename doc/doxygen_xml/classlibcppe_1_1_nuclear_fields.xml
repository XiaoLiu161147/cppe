<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classlibcppe_1_1_nuclear_fields" kind="class" language="C++" prot="public">
    <compoundname>libcppe::NuclearFields</compoundname>
    <includes refid="electric__fields_8hh" local="no">electric_fields.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibcppe_1_1_nuclear_fields_1abfaa0446428c52edd4ccc7e35171acaa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlibcppe_1_1_potential" kindref="compound">Potential</ref> &gt;</type>
        <definition>std::vector&lt;Potential&gt; libcppe::NuclearFields::m_potentials</definition>
        <argsstring></argsstring>
        <name>m_potentials</name>
        <briefdescription>
<para>vector with all site potentials </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="16" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="16" bodyend="-1"/>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a85ca5f1ce931a44f57b57252cacefd07" compoundref="electric__fields_8hh" startline="23" endline="27">NuclearFields</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlibcppe_1_1_nuclear_fields_1a8aa1c41f71b1c6d349a176054edfd464" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlibcppe_1_1_potential" kindref="compound">Potential</ref> &gt;</type>
        <definition>std::vector&lt;Potential&gt; libcppe::NuclearFields::m_polsites</definition>
        <argsstring></argsstring>
        <name>m_polsites</name>
        <briefdescription>
<para>vector with all potentials of polarizable sites </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="18" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="18" bodyend="-1"/>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a9f49933ca9e5135bc602cbd66bbcdf33" compoundref="electric__fields_8cc" startline="9" endline="30">compute</referencedby>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a85ca5f1ce931a44f57b57252cacefd07" compoundref="electric__fields_8hh" startline="23" endline="27">NuclearFields</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlibcppe_1_1_nuclear_fields_1af1468ec6b031905705c76e25de8762c0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t libcppe::NuclearFields::m_n_polsites</definition>
        <argsstring></argsstring>
        <name>m_n_polsites</name>
        <briefdescription>
<para>number of polarizable sites </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="19" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="19" bodyend="-1"/>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a9f49933ca9e5135bc602cbd66bbcdf33" compoundref="electric__fields_8cc" startline="9" endline="30">compute</referencedby>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a85ca5f1ce931a44f57b57252cacefd07" compoundref="electric__fields_8hh" startline="23" endline="27">NuclearFields</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlibcppe_1_1_nuclear_fields_1ae50ea454a1bf747dc29dc4d4241b1ada" prot="private" static="no" mutable="no">
        <type><ref refid="structlibcppe_1_1_molecule" kindref="compound">Molecule</ref></type>
        <definition>Molecule libcppe::NuclearFields::m_mol</definition>
        <argsstring></argsstring>
        <name>m_mol</name>
        <briefdescription>
<para>core region molecule </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="20" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="20" bodyend="-1"/>
        <referencedby refid="classlibcppe_1_1_nuclear_fields_1a9f49933ca9e5135bc602cbd66bbcdf33" compoundref="electric__fields_8cc" startline="9" endline="30">compute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibcppe_1_1_nuclear_fields_1a85ca5f1ce931a44f57b57252cacefd07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libcppe::NuclearFields::NuclearFields</definition>
        <argsstring>(Molecule mol, std::vector&lt; Potential &gt; potentials)</argsstring>
        <name>NuclearFields</name>
        <param>
          <type><ref refid="structlibcppe_1_1_molecule" kindref="compound">Molecule</ref></type>
          <declname>mol</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classlibcppe_1_1_potential" kindref="compound">Potential</ref> &gt;</type>
          <declname>potentials</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="23" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="23" bodyend="27"/>
        <references refid="classlibcppe_1_1_nuclear_fields_1a8aa1c41f71b1c6d349a176054edfd464" compoundref="electric__fields_8hh" startline="18">m_polsites</references>
        <references refid="namespacelibcppe_1a7513df43417a5cf4db9187abfd22fbea" compoundref="electric__fields_8cc" startline="205" endline="214">libcppe::get_polarizable_sites</references>
        <references refid="classlibcppe_1_1_nuclear_fields_1abfaa0446428c52edd4ccc7e35171acaa" compoundref="electric__fields_8hh" startline="16">m_potentials</references>
        <references refid="classlibcppe_1_1_nuclear_fields_1af1468ec6b031905705c76e25de8762c0" compoundref="electric__fields_8hh" startline="19">m_n_polsites</references>
      </memberdef>
      <memberdef kind="function" id="classlibcppe_1_1_nuclear_fields_1a94092540761af37b89afa13b75781b38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libcppe::NuclearFields::~NuclearFields</definition>
        <argsstring>()</argsstring>
        <name>~NuclearFields</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="28" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classlibcppe_1_1_nuclear_fields_1a9f49933ca9e5135bc602cbd66bbcdf33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd libcppe::NuclearFields::compute</definition>
        <argsstring>(bool damp_core=false)</argsstring>
        <name>compute</name>
        <param>
          <type>bool</type>
          <declname>damp_core</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="30" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.cc" bodystart="9" bodyend="30"/>
        <references refid="namespacelibcppe_1a97556873162363c2affbca8253042729" compoundref="math_8cc" startline="118" endline="152">libcppe::Tk_coefficients</references>
        <references refid="classlibcppe_1_1_nuclear_fields_1af1468ec6b031905705c76e25de8762c0" compoundref="electric__fields_8hh" startline="19">m_n_polsites</references>
        <references refid="classlibcppe_1_1_nuclear_fields_1a8aa1c41f71b1c6d349a176054edfd464" compoundref="electric__fields_8hh" startline="18">m_polsites</references>
        <references refid="classlibcppe_1_1_potential_1ac2e845f27e6742134a1d57a5f2b66db5" compoundref="multipole_8hh" startline="102" endline="102">libcppe::Potential::get_site_position</references>
        <references refid="classlibcppe_1_1_nuclear_fields_1ae50ea454a1bf747dc29dc4d4241b1ada" compoundref="electric__fields_8hh" startline="20">m_mol</references>
        <references refid="namespacelibcppe_1a3a5eca65d4ae00dea484f437797349a6" compoundref="math_8cc" startline="21" endline="36">libcppe::Tk_tensor</references>
        <referencedby refid="classlibcppe_1_1_cppe_state_1a1106aef8284b272bc5460031b08b238f" compoundref="cppe__state_8cc" startline="38" endline="52">libcppe::CppeState::calculate_static_energies_and_fields</referencedby>
        <referencedby refid="pycppe_8cc_1a9cea21d86c07b65d985f3bd0354f9d5f" compoundref="export__fields_8cc" startline="14" endline="34">export_fields</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="32">
        <label>std::vector&lt; Atom &gt;</label>
      </node>
      <node id="31">
        <label>libcppe::Molecule</label>
        <link refid="structlibcppe_1_1_molecule"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>libcppe::NuclearFields</label>
        <link refid="classlibcppe_1_1_nuclear_fields"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_mol</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" line="14" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/core/electric_fields.hh" bodystart="14" bodyend="31"/>
    <listofallmembers>
      <member refid="classlibcppe_1_1_nuclear_fields_1a9f49933ca9e5135bc602cbd66bbcdf33" prot="public" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>compute</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1ae50ea454a1bf747dc29dc4d4241b1ada" prot="private" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>m_mol</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1af1468ec6b031905705c76e25de8762c0" prot="private" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>m_n_polsites</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1a8aa1c41f71b1c6d349a176054edfd464" prot="private" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>m_polsites</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1abfaa0446428c52edd4ccc7e35171acaa" prot="private" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>m_potentials</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1a85ca5f1ce931a44f57b57252cacefd07" prot="public" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>NuclearFields</name></member>
      <member refid="classlibcppe_1_1_nuclear_fields_1a94092540761af37b89afa13b75781b38" prot="public" virt="non-virtual"><scope>libcppe::NuclearFields</scope><name>~NuclearFields</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
