<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="libcppe_8hh" kind="file" language="C++">
    <compoundname>libcppe.hh</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="multipole_8hh" local="yes">core/multipole.hh</includes>
    <includedby refid="libcppe_8cc" local="yes">/Users/maxscheurer/Projects/cppe/cppe/libcppe.cc</includedby>
    <incdepgraph>
      <node id="205">
        <label>core/multipole.hh</label>
        <link refid="multipole_8hh"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>Eigen/Core</label>
      </node>
      <node id="203">
        <label>string</label>
      </node>
      <node id="202">
        <label>/Users/maxscheurer/Projects/cppe/cppe/libcppe.hh</label>
        <link refid="libcppe_8hh"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>vector</label>
      </node>
      <node id="207">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="209">
        <label>/Users/maxscheurer/Projects/cppe/cppe/libcppe.cc</label>
        <link refid="libcppe_8cc"/>
      </node>
      <node id="208">
        <label>/Users/maxscheurer/Projects/cppe/cppe/libcppe.hh</label>
        <link refid="libcppe_8hh"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlibcppe_1_1_c_p_p_e" prot="public">libcppe::CPPE</innerclass>
    <innernamespace refid="namespacelibcppe">libcppe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBCPPE_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBCPPE_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;core/molecule.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="multipole_8hh" kindref="compound">core/multipole.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;core/pe_options.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibcppe" kindref="compound">libcppe</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classlibcppe_1_1_c_p_p_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibcppe_1_1_c_p_p_e" kindref="compound">CPPE</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a00df555829f44da470396eb897c91523" kindref="member">CPPE</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1aae1b8d61cb7305011f3ac2f5b870a622" kindref="member">~CPPE</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>call_pe_energy(const<sp/>double<sp/>*densmat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>call_pe_pol_energy(const<sp/>double<sp/>*densmat,<sp/>double<sp/>*energy);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>call_full_fock(const<sp/>double<sp/>*densmat,<sp/>double<sp/>*fockmat,<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*energy);<sp/>bool<sp/>gen1int_initialized()<sp/>{<sp/>return<sp/>m_gen1int_initialized;<sp/>}<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize_gen1int(int<sp/>natoms,<sp/>int<sp/>nshells,<sp/>const<sp/>double<sp/>*coords,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>*charges);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>gen1int_add_shell(int<sp/>spher_gto,<sp/>int<sp/>idx_center,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>*coord_center,<sp/>int<sp/>ang_num,<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_prim,<sp/>const<sp/>double<sp/>*exponents,<sp/>int<sp/>num_contr,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>*contr_coef);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>gen1int_print_shells();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>initialize_pelib(PeOptions<sp/>&amp;options,<sp/>int<sp/>natoms,<sp/>int<sp/>nbas,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>*coords,<sp/>const<sp/>double<sp/>*charges);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>std::vector&lt;Potential&gt;<sp/><ref refid="classlibcppe_1_1_c_p_p_e_1aaa7a8a306e74ebaf6785dfa22c14e44c" kindref="member">read_potfile</ref>(std::string<sp/>potfile_name);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classlibcppe_1_1_c_p_p_e_1a802bca8cb5bbe9e8f0b6aff2c96996d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a802bca8cb5bbe9e8f0b6aff2c96996d7" kindref="member">m_gen1int_initialized</ref>;</highlight></codeline>
<codeline lineno="35" refid="classlibcppe_1_1_c_p_p_e_1a074fd2f8e6a8323a2d19cbd0ad87b5ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a074fd2f8e6a8323a2d19cbd0ad87b5ac" kindref="member">m_pe_initialized</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>build<sp/>a<sp/>struct/class<sp/>with<sp/>the<sp/>basis<sp/>set<sp/>info?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlibcppe_1_1_c_p_p_e_1a7c0b7645fb2cfc22018305274a968406" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a7c0b7645fb2cfc22018305274a968406" kindref="member">m_nbas</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>basis<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlibcppe_1_1_c_p_p_e_1a0629a48687503d9428abfe7dbdb1f70c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a0629a48687503d9428abfe7dbdb1f70c" kindref="member">m_nnbas</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>nbas*(nbas+1)/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classlibcppe_1_1_c_p_p_e_1a3ebec8fcb42c454065416698cc176b35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibcppe_1_1_c_p_p_e_1a3ebec8fcb42c454065416698cc176b35" kindref="member">m_natoms</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>libcppe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>LIBCPPE_INCLUDE_H</highlight></codeline>
    </programlisting>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/libcppe.hh"/>
  </compounddef>
</doxygen>
