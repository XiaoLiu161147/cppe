<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="md___users_maxscheurer__projects_cppe__r_e_a_d_m_e" kind="page">
    <compoundname>md__Users_maxscheurer_Projects_cppe_README</compoundname>
    <title>CPPE</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://travis-ci.org/maxscheurer/cppe"></ulink></para><para>CPPE is an open-source, light-weight <bold>C</bold>-**P**lus-**P**lus library for **P**olarizable **E**mbedding (PE)<superscript>1,2</superscript> calculations. It provides an easy-to-use API to implement PE for ground-state self-consistent field calculations and post-SCF methods. A convenient Python interface is also available.</para><para>For testing purposes, CPPE is also interfaced to the original PE implementation, namely <ulink url="https://gitlab.com/pe-software/pelib-public">PElib</ulink>, used in the DALTON program package.</para><para><heading level="2">Installation</heading>
</para><para>CPPE needs to be built from sources, i.e., <programlisting><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/maxscheurer/cppe</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>cppe;<sp/>mkdir<sp/>build;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make<sp/>-j4</highlight></codeline>
</programlisting></para><para><heading level="3">Python interface</heading>
</para><para>If the Python interface should be built, specify the CMake option <computeroutput>-DENABLE_PYTHON_INTERFACE=ON</computeroutput>. If <computeroutput>pybind11</computeroutput> is not installed, CMake will automatically download <computeroutput>pybind11</computeroutput> and install it locally.</para><para><heading level="3">PElib interface</heading>
</para><para>To build PElib (together with <computeroutput>gen1int</computeroutput> and the appropriate interface), set the following option: <computeroutput>-DENABLE_PELIB=ON</computeroutput>.</para><para><heading level="3">Dependencies</heading>
</para><para><itemizedlist>
<listitem><para>C++ 11 compiler</para></listitem><listitem><para>Python 3.6 (interpreter and development packages)</para></listitem></itemizedlist>
</para><para><heading level="2">Literature</heading>
</para><para><superscript>1</superscript> Olsen, J. M., Aidas, K., &amp; Kongsted, J. (2010). Excited States in Solution through Polarizable Embedding. <emphasis>J. Chem. Theory Comput.</emphasis>, <bold>6</bold> (12), 3721â€“3734.</para><para><superscript>2</superscript> Olsen, J. M. H., &amp; Kongsted, J. (2011). Molecular Properties through Polarizable Embedding. <emphasis>Advances in Quantum Chemistry</emphasis> (Vol. 61). <ulink url="https://doi.org/10.1016/B978-0-12-386013-2.00003-6">https://doi.org/10.1016/B978-0-12-386013-2.00003-6</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
