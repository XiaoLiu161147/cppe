<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="export__math_8cc" kind="file" language="C++">
    <compoundname>export_math.cc</compoundname>
    <includes local="no">pybind11/eigen.h</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/stl.h</includes>
    <includes refid="math_8hh" local="yes">../core/math.hh</includes>
    <incdepgraph>
      <node id="233">
        <label>Eigen/Core</label>
      </node>
      <node id="229">
        <label>pybind11/eigen.h</label>
      </node>
      <node id="232">
        <label>../core/math.hh</label>
        <link refid="math_8hh"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>vector</label>
      </node>
      <node id="230">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="228">
        <label>/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc</label>
        <link refid="export__math_8cc"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>pybind11/stl.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="export__math_8cc_1a859c374327accb4a46e2d4a6fb8b66eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void export_math</definition>
        <argsstring>(py::module &amp;m)</argsstring>
        <name>export_math</name>
        <param>
          <type>py::module &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc" line="11" column="1" bodyfile="/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc" bodystart="11" bodyend="26"/>
        <references refid="namespacelibcppe_1ab3345600c4bcba48203bc9ebf0bfa26b" compoundref="math_8cc" startline="9" endline="18">libcppe::smat_vec</references>
        <references refid="namespacelibcppe_1ad8720df1e0ef45bf4bf85f41cefe06e4" compoundref="math_8cc" startline="40" endline="79">libcppe::multipole_derivative</references>
        <references refid="namespacelibcppe_1adffd860092c2f5b3cfd872ed27d727dc" compoundref="math_8cc" startline="99" endline="116">libcppe::T</references>
        <references refid="namespacelibcppe_1a3a5eca65d4ae00dea484f437797349a6" compoundref="math_8cc" startline="21" endline="36">libcppe::Tk_tensor</references>
        <references refid="namespacelibcppe_1a97556873162363c2affbca8253042729" compoundref="math_8cc" startline="118" endline="152">libcppe::Tk_coefficients</references>
        <references refid="namespacelibcppe_1ae154b65087da1892fd7ab0f1da8152b0" compoundref="math_8cc" startline="82" endline="97">libcppe::xyz2idx</references>
        <references refid="namespacelibcppe_1aa592960766a82f25a26aedd55ca25d4e" compoundref="math_8cc" startline="154" endline="159">libcppe::factorial</references>
        <references refid="namespacelibcppe_1a7501ee95ce7c58b05d8d856397bfed40" compoundref="math_8cc" startline="161" endline="172">libcppe::make_df</references>
        <references refid="namespacelibcppe_1ad06531d448492562498d98ef6b1be53e" compoundref="math_8cc" startline="174" endline="176">libcppe::trinom</references>
        <references refid="namespacelibcppe_1a0427d5cd7fdd232f829e3dc48524d8d0" compoundref="math_8cc" startline="178" endline="192">libcppe::symmetry_factors</references>
        <references refid="namespacelibcppe_1adcabc059a00716d45ddca295dc0b93d5" compoundref="math_8cc" startline="194" endline="203">libcppe::prefactors</references>
        <references refid="namespacelibcppe_1ae68605edfeae6c5741f5ec4c17bc0e0f" compoundref="math_8cc" startline="205" endline="218">libcppe::prefactors_nuclei</references>
        <references refid="namespacelibcppe_1a805981c691429e1882cc7e4613128374" compoundref="math_8cc" startline="220" endline="220">libcppe::multipole_components</references>
        <referencedby refid="pycppe_8cc_1aede4ed36a00185bbc1f705fc2add7f46" compoundref="pycppe_8cc" startline="13" endline="22">PYBIND11_MODULE</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;pybind11/eigen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../core/math.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibcppe" kindref="compound">libcppe</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="pycppe_8cc_1ac7db1ce11900efbf510bcd171590ccd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="export__math_8cc_1a859c374327accb4a46e2d4a6fb8b66eb" kindref="member">export_math</ref>(py::module<sp/>&amp;m)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;smat_vec&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1ab3345600c4bcba48203bc9ebf0bfa26b" kindref="member">smat_vec</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;multipole_derivative&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1ad8720df1e0ef45bf4bf85f41cefe06e4" kindref="member">multipole_derivative</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1adffd860092c2f5b3cfd872ed27d727dc" kindref="member">T</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;Tk_tensor&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1a3a5eca65d4ae00dea484f437797349a6" kindref="member">Tk_tensor</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;Tk_coefficients&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1a97556873162363c2affbca8253042729" kindref="member">Tk_coefficients</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;xyz2idx&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1ae154b65087da1892fd7ab0f1da8152b0" kindref="member">xyz2idx</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;factorial&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1aa592960766a82f25a26aedd55ca25d4e" kindref="member">factorial</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;make_df&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1a7501ee95ce7c58b05d8d856397bfed40" kindref="member">make_df</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;trinom&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1ad06531d448492562498d98ef6b1be53e" kindref="member">trinom</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;symmetry_factors&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1a0427d5cd7fdd232f829e3dc48524d8d0" kindref="member">symmetry_factors</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;prefactors&quot;</highlight><highlight class="normal">,<sp/>py::overload_cast&lt;unsigned&gt;(&amp;<ref refid="namespacelibcppe_1adcabc059a00716d45ddca295dc0b93d5" kindref="member">prefactors</ref>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Prefactors<sp/>for<sp/>the<sp/>multipole<sp/>components<sp/>(alphabetical<sp/>order)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;prefactors_nuclei&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1ae68605edfeae6c5741f5ec4c17bc0e0f" kindref="member">prefactors_nuclei</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;multipole_components&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="namespacelibcppe_1a805981c691429e1882cc7e4613128374" kindref="member">multipole_components</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/maxscheurer/Projects/cppe/cppe/pycppe/export_math.cc"/>
  </compounddef>
</doxygen>
